"""Events and retreats optimization

Revision ID: db6e9f0dcbdd
Revises: 98021f04b9a5
Create Date: 2025-08-04 00:19:37.416765

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'db6e9f0dcbdd'
down_revision = '98021f04b9a5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('information_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reservation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('participants_count', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retreat_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('room_type_1_name', sa.String(length=255), nullable=True),
    sa.Column('room_type_1_price', sa.Float(), nullable=True),
    sa.Column('room_type_2_name', sa.String(length=255), nullable=True),
    sa.Column('room_type_2_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id')
    )
    with op.batch_alter_table('event', schema=None) as batch_op:
        # 1. AÃ±ade la columna 'event_type' permitiendo valores NULL temporalmente.
        batch_op.add_column(sa.Column('event_type', sa.String(length=50), nullable=True, server_default=sa.text("'pagado'")))

    # 2. Actualiza todos los registros existentes para asignarles un valor por defecto.
    op.execute("UPDATE event SET event_type = 'pagado' WHERE event_type IS NULL")

    with op.batch_alter_table('event', schema=None) as batch_op:
        # 3. Elimina el valor por defecto y establece la columna como NOT NULL.
        batch_op.alter_column('event_type', existing_type=sa.String(length=50), nullable=False, server_default=None)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.add_column(sa.Column('price_4', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('price_3', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('price_2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.drop_column('event_type')

    op.drop_table('retreat_details')
    op.drop_table('reservation')
    op.drop_table('information_request')
    # ### end Alembic commands ###
